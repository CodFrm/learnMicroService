version: '3'

services:
    kong_migrations: # 构建kong数据库,这个镜像和下面的镜像是一样的
        image: kong
        container_name: micro_kong_migrations
        command: kong migrations bootstrap
        depends_on:
            - kong_database
        environment:
            - KONG_DATABASE=postgres
            - KONG_PG_HOST=kong_database
            - KONG_PG_DATABASE=kong
            - KONG_PG_PASSWORD=kong
        networks: 
            - micro

    kong: # kong网关服务
        image: kong
        hostname: kong
        container_name: micro_kong
        environment:
            - KONG_DATABASE=postgres
            - KONG_PG_HOST=172.28.1.4
            - KONG_PG_DATABASE=kong
            - KONG_PG_PASSWORD=kong
            - KONG_DNS_RESOLVER=172.28.1.3:8600
            - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
        depends_on:
            - kong_migrations
            - kong_database
        ports:
            - "8000:8000"
            - "8443:8443"
            - "8001:8001"
            - "8444:8444"
        networks:
            - micro

    kong_dashboard: # kong管理面板
        image: pantsel/konga
        container_name: kong_dashboard
        environment: 
            - TOKEN_SECRET=micro
            - NODE_ENV=development
            - DB_ADAPTER=postgres
            - DB_HOST=kong_database
            - DB_USER=kong
            - DB_PASSWORD=kong
            - DB_DATABASE=kong
        depends_on:
            - kong
        ports:
            - 1337:1337
        networks: 
            - micro
          
    kong_database: # kong数据库 采用的postgres
        image: postgres
        hostname: kong_database
        container_name: micro_kong_database
        environment: 
            - POSTGRES_USER=kong
            - POSTGRES_DB=kong
            - POSTGRES_PASSWORD=kong
        ports: 
            - 5432:5432
        volumes:
            - ./service/db/postgres:/var/lib/postgresql
        networks: 
            micro:
                ipv4_address: 172.28.1.4

    service_center:
        image: consul
        hostname: service_center
        container_name: micro_service_center
        ports: 
            - 8500:8500
            - 8600:8600
            - 8300:8300
        networks: 
            micro:
                ipv4_address: 172.28.1.3

    post_1:
        image: post:latest
        container_name: micro_post_micro_1
        depends_on: 
            - auth_1
            - post_db
        ports: 
            - 8004:8004
        networks: 
            - micro

    auth_1:
        image: auth:latest
        container_name: micro_auth_microo_1
        depends_on: 
            - service_center
            - auth_db
        networks: 
            - micro

    post_db:
        image: mysql:5.7
        hostname: post_db
        container_name: micro_post_db
        environment: 
            - MYSQL_USER=post
            - MYSQL_PASSWORD=micro_db_pwd
            - MYSQL_ROOT_PASSWORD=micro_db_pwd
            - MYSQL_DATABASE=post
        ports: 
            - 3308:3306
        volumes:
            - ./service/db/post_db:/var/lib/mysql
        networks: 
            - micro

    auth_db:
        image: mysql:5.7
        hostname: auth_db
        container_name: micro_auth_db
        environment: 
            - MYSQL_USER=auth
            - MYSQL_PASSWORD=micro_db_pwd
            - MYSQL_ROOT_PASSWORD=micro_db_pwd
            - MYSQL_DATABASE=auth
        ports: 
            - 3307:3306
        volumes:
            - ./service/db/auth_db:/var/lib/mysql
        networks: 
            - micro

    zookeeper:
        image: wurstmeister/zookeeper
        hostname: zookeeper
        container_name: micro_zookeeper
        ports:
            - 2181:2181
        networks: 
            - micro

    kafka:
        image: wurstmeister/kafka
        hostname: kafka_mq
        container_name: micro_kafka_mq
        environment: 
            - KAFKA_ADVERTISED_HOST_NAME=10.0.75.1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        ports:
            - 9092:9092
        networks: 
            - micro

networks:
    micro:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16